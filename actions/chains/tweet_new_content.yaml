    # TODO
    # - add account logic
    # - Add task to wait for a certain time of day before starting (don't forget timeout there too)
    # - Adjust wait_until_pubtime to only publish on weekends
    # - fix timeouts?
    # - Actually need to create a whole new pack for automating content sharing, complete with aliases to immediately share things


# This was originally a Mistral workflow, but since Mistral uses service tokens to authenticate to st2, we need to increase the TTL
# for long-running workflows like this:
        # [auth]
        # service_token_ttl = 604800
        # token_ttl = 604800
# I converted to an actionchain for simplicity - I don't need the differentiating features in Mistral for this, and I don't want to have
# to adjust st2.conf if I can avoid it. Makes this pack more portable.


---
default: "get_schedule"
chain:

      - name: get_schedule
        ref: antidoteops.get_publishing_schedule
        on-success: "first_sleep"

      - name: first_sleep
        ref: antidoteops.wait_until
        parameters:
            timeout: 604800
            timestr: "{{ get_schedule.result[0] }}"
        on-success: "first_tweet"

      - name: first_tweet
        ref: twitter.update_status
        parameters:
            account: "{{account}}"
            status: "[New Post] {{title}} {{link }}"
            media: ["{{featuredimage}}"]
        on-success: "first_retweet"

      - name: first_retweet
        ref: twitter.retweet
        parameters:
            accounts: "{{rtaccounts}}"
            tweet_id: "{{ first_tweet.result.status_id }}"
        on-success: "second_sleep"

      - name: second_sleep
        ref: antidoteops.wait_until
        parameters:
            timeout: 604800
            timestr: "{{ get_schedule.result[1] }}"
        on-success: "second_tweet"

      - name: second_tweet
        ref: twitter.update_status
        parameters:
            account: "{{account}}"
            status: "♻ ICYMI: {{title}} {{link }}"
            media: ["{{featuredimage}}"]
        on-success: "second_retweet"

      - name: second_retweet
        ref: twitter.retweet
        parameters:
            accounts: "{{rtaccounts}}"
            tweet_id: "{{ second_tweet.result.status_id }}"
        on-success: "third_sleep"

      - name: third_sleep
        ref: antidoteops.wait_until
        parameters:
            timeout: 604800
            timestr: "{{ get_schedule.result[2] }}"
        on-success: "third_tweet"

      - name: third_tweet
        ref: twitter.update_status
        parameters:
            account: "{{account}}"
            status: "♻♻ ICYMI: {{title}} {{link }}"
            media: ["{{featuredimage}}"]
