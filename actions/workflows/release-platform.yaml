version: '2.0'
antidoteops.release_platform:
    description: Prepare antidote projects for release.
    input:
        - version
        - repos
        - docker_repos

    tasks:

      # Should add a check here to ensure that the version input is exactly semver compatible,
      # excluding any leading "v" since this workflow does that for us.

      # TODO(mierdin): should execute a `make test` for syringe here so we know it's passing test before we release.
      # For now we'll rely on the documented process.

      # TODO expand to other repos when they have proper CI
      #check_health:
      #  action: core.local
      #  input:
      #    cmd: if [ $(curl https://api.github.com/repos/nre-learning/syringe/status/master | jq .state) = '"failure"' ]; then exit 1; fi
      #  on-success:
      #      - determine_version

      determine_version:
        action: core.noop
        on-success:
            - set_latest: <% $.version = 'latest' %>
            - set_version: <% not $.version = 'latest' %>

      set_latest:
        action: core.noop
        publish:
          docker_version: latest
          git_version: master
        on-success:
            - tag_all_repos

      set_version:
        action: core.noop
        publish:
          docker_version: "release-v{{ _.version }}"
          git_version: "v{{ _.version }}"
        on-success:
            - tag_all_repos

      # Goes through and creates git tags for all repos, and rotates changelog
      tag_all_repos:
        with-items: repo in <% $.repos %>
        concurrency: 1
        action: antidoteops.tag_repos
        input:
            project: <% $.repo %>
            git_version: <% $.git_version %>
            docker_version: <% $.docker_version %>
        on-success:
            - create_release

      # Create github release for each repo, containing the text 
      create_release:
        with-items: repo in <% $.repos %>
        concurrency: 1
        action: antidoteops.create_gh_release
        input:
          repo: <% $.repo %>
          version: <% $.git_version %>
        on-success:
            - compile_and_upload_syringe_assets

      # Compile Syringe for all supported platforms and attach binaries as assets to this release
      # TODO(mierdin): need to provide precompiled "latest" binaries, not just releases.
      compile_and_upload_syringe_assets:
        action: core.local
        input:
            timeout: 1200
            env:
              GITHUB_TOKEN: "{{st2kv.system.github_oauth_token}}"
              RELEASE_VERSION: <% $.git_version %>
            cmd: "docker pull antidotelabs/syringebuilder && docker run antidotelabs/syringebuilder /compile_and_upload.sh $GITHUB_TOKEN $RELEASE_VERSION"
        on-success:
            - publish_docker_images

      publish_docker_images:
        with-items: repo in <% $.docker_repos %>
        action: antidoteops.build_docker_image
        input:
          repo: <% $.repo %>
          version: <% $.docker_version %>
